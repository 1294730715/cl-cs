<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cl.cs.mapper.worksheet.WorksheetLogMapper" >
  <resultMap id="BaseResultMap" type="com.cl.cs.model.worksheet.WorksheetLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="worksheet_id" property="worksheetId" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="TINYINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_ip" property="createIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, worksheet_id, type_id, content, create_person, create_date, create_ip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from cs_worksheet_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cs_worksheet_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cl.cs.model.worksheet.WorksheetLog" >
    insert into cs_worksheet_log (id, worksheet_id, type_id, 
      content, create_person, create_date, 
      create_ip)
    values (#{id,jdbcType=INTEGER}, #{worksheetId,jdbcType=INTEGER}, #{typeId,jdbcType=TINYINT}, 
      #{content,jdbcType=VARCHAR}, #{createPerson,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cl.cs.model.worksheet.WorksheetLog" >
    insert into cs_worksheet_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="worksheetId != null" >
        worksheet_id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createIp != null" >
        create_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="worksheetId != null" >
        #{worksheetId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createIp != null" >
        #{createIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cl.cs.model.worksheet.WorksheetLog" >
    update cs_worksheet_log
    <set >
      <if test="worksheetId != null" >
        worksheet_id = #{worksheetId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createIp != null" >
        create_ip = #{createIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cl.cs.model.worksheet.WorksheetLog" >
    update cs_worksheet_log
    set worksheet_id = #{worksheetId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=TINYINT},
      content = #{content,jdbcType=VARCHAR},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_ip = #{createIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>